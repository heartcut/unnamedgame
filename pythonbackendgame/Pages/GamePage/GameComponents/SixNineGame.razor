@implements IDisposable
@inject SoundService SoundService
@if(issix!=null && issix)
{
    @if(playernumber==playeriam)
    {
        <h2 id="game-title">Find all the sixes</h2>
        <br />
    }
    else
    {
        <h2 id="game-title" style="opacity:0%;">Find all the nines</h2>
        <br />
    }
    

    @foreach (var row in Enumerable.Range(0, totalNumbers / columns))
    {
        <div class="sixnine">

            @foreach (var i in Enumerable.Range(row * columns, columns))
            {
                @if (i < totalNumbers)
                {
                    <span @onclick="(() => IsSix(i))">@((answer1 == i || answer2 == i || answer3 == i || answer4 == i) ? six : nine)</span>
                }
            }
        </div>
    }
}
else if (issix != null && !issix)
{
    @if (playernumber == playeriam)
    {
        <h2 id="game-title">Find all the nines</h2>
        <br />
    }
    else
    {
        <h2 id="game-title" style="opacity:0%;">Find all the nines</h2>
        <br />
    }

    @foreach (var row in Enumerable.Range(0, totalNumbers / columns))
    {
        <div class="sixnine">
            @foreach (var i in Enumerable.Range(row * columns, columns))
            {
                @if (i < totalNumbers)
                {
                    <span @onclick="(() => IsSix(i))">@((answer1 == i || answer2 == i || answer3 == i || answer4 == i) ? nine : six)</span>
                }
            }
        </div>
    }
}
else{}

<div class="sixnine">@status</div>
@code {
    private int columns = 19; // Number of columns per row
    private int totalNumbers = 133; // Total number of elements


    bool issix;
    [Parameter] public EventCallback<MainDataModel> mainDataModelChanged { get; set; }
    [Parameter] public EventCallback<LeechSendModel> lsmChanged { get; set; }
    [Parameter]
    public int answer1 { get; set; }
    [Parameter]
    public int answer2 { get; set; }
    [Parameter]
    public int answer3 { get; set; }
    [Parameter]
    public int answer4 { get; set; }
    [Parameter]
    public int playernumber { get; set; }
    [Parameter]
    public int playeriam { get; set; }
    [Parameter]
    public MainDataModel mainDataModel { get; set; }
    [Parameter]
    public LeechSendModel lsm { get; set; }

    string six = " 6 ";
    string nine = " 9 ";

    Random random = new Random();

    public string status;
    public int rightanswer = 0;
    public int wronganswer = 0;
    int answers;
    protected override void OnInitialized()
    {
        if(answer1%2==0)
        {
            issix = true;
        }
        else{ issix = false; }
        if(answer2+answer3%2==0)
        {
            answers = 3;
        }
        else { answers = 4; }
    }


    public async Task IsSix(int x)
    {
        if (x == answer1 || x == answer2 || x == answer3 || x == answer4)
        {
            await SoundService.PlaySound();
            rightanswer++;
            //currently updating from db make it where if a matches a number in the array it changes to 99
            if (x == answer1)
            {
                answer1 = 135;
                if (playeriam == 1)
                {
                    mainDataModel.P1GameVar1 = 135;
                }
                else
                {
                    lsm.GameVar1 = 135;
                }
            }
            if (x == answer2)
            {
                answer2 = 135;
                if(playeriam == 1)
                {
                    mainDataModel.P1GameVar2 = 135;
                }
                else
                {
                    lsm.GameVar2 = 135;
                }
            }
            if (x == answer3)
            {
                answer3 = 135;
                if (playeriam == 1)
                {
                    mainDataModel.P1GameVar3 = 135;
                }
                else
                {
                    lsm.GameVar3 = 135;
                }
            }
            if (x == answer4)
            {
                answer4 = 135;
                if (playeriam == 1)
                {
                    mainDataModel.P1GameVar4 = 135;
                }
                else
                {
                    lsm.GameVar4 = 135;
                }
            }
            if (rightanswer == answers)
            {
                status = "youwin!";
                await Task.Delay(1000);
                mainDataModel.FinishedGame(true, playeriam, mainDataModel, lsm);
            }
        }
        else if (wronganswer >= 1)
        {
            status = "youlose";
            await Task.Delay(1000);
            mainDataModel.FinishedGame(false,playeriam,mainDataModel,lsm);
        }
        else
        {
            wronganswer++;
        }
    }
    public void Dispose()
    {
    }
}
