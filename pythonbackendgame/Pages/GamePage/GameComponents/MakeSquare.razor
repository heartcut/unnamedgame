
<h2 id="game-title">Use the buttons to turn the triangles into a square.</h2>
<br />
<div>
    <div class="arrow-up" style="transform: rotate(@GetVars(1)); transition: transform .5s;"></div>
    <div class="arrow-down" style="transform: rotate(@GetVars(2)); transition: transform .5s;"></div>
    <div class="arrow-left" style="transform: rotate(@GetVars(3)); transition: transform .5s;"></div>
    <div class="arrow-right" style="transform: rotate(@GetVars(4)); transition: transform .5s;"></div>
</div>
<div id="colorbuttons" class="botofgame">
    <a class="colorbutton1" @onclick="()=>SquareRotate(1)">Rotate</a>
    <a class="colorbutton2" @onclick="()=>SquareRotate(2)">Rotate</a>
    <a class="colorbutton3" @onclick="()=>SquareRotate(3)">Rotate</a>
    <a class="colorbutton4" @onclick="()=>SquareRotate(4)">Rotate</a>
</div>

@code {
    [Parameter] public EventCallback<MainDataModel> mainDataModelChanged { get; set; }
    [Parameter] public EventCallback<LeechSendModel> lsmChanged { get; set; }
    [Parameter]
    public LeechSendModel lsm { get; set; }
    [Parameter]
    public MainDataModel mainDataModel { get; set; }
    [Parameter]
    public int Var1 { get; set; }
    [Parameter]
    public int Var2 { get; set; }
    [Parameter]
    public int Var3 { get; set; }
    [Parameter]
    public int Var4 { get; set; }
    [Parameter]
    public int playernumber { get; set; }
    [Parameter]
    public int playeriam { get; set; }

    public string done = "not yet";
    protected override void OnInitialized()
    {
        done = "not yet";
    }
    public string GetVars(int which)
    {
        switch (which)
        {
            case 1: return (Var1 * 90).ToString() + "deg";
            case 2: return (Var2 * 90).ToString() + "deg";
            case 3: return (Var3 * 90).ToString() + "deg";
            case 4: return (Var4 * 90).ToString() + "deg";
        }
        return "1";
    }
    public async Task SquareRotate(int a)
    {
        switch (a)
        {
            case 1:
                if (playeriam == 1) { mainDataModel.P1GameVar1++; }
                else { lsm.GameVar1++; }
                Var1++;
                break;
            case 2:
                if (playeriam == 1) { mainDataModel.P1GameVar2++; }
                else { lsm.GameVar2++; }
                Var2++;
                break;
            case 3:
                if (playeriam == 1) { mainDataModel.P1GameVar3++; }
                else { lsm.GameVar3++; }
                Var3++;
                break;
            case 4:
                if (playeriam == 1) { mainDataModel.P1GameVar4++; }
                else { lsm.GameVar4++; }
                Var4++;
                break;
        }
        if (Var1 % 4 == 0 && Var2 % 4 == 0 && Var3 % 4 == 0 && Var4 % 4 == 0)
        {
            done = "okay ur done kid.";
            //you finished the game
            await Task.Delay(1000);
            if (playeriam == 1) { mainDataModel.P1State = 0;  }
            else { lsm.MyState = 0; switch (playeriam) { case 2: mainDataModel.P2State = 0; break; case 3: mainDataModel.P3State = 0; break; case 4: mainDataModel.P4State = 0; break; } }
            //StateHasChanged();
        }
        //StateHasChanged();
    }
}
